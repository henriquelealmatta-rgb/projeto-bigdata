[tool.poetry]
name = "movies-big-data-pipeline"
version = "0.1.0"
description = "Pipeline completo de Big Data para an√°lise do dataset The Movies Dataset"
authors = ["Equipe Big Data <equipe@bigdata.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
pandas = "^2.1.0"
numpy = "^1.24.0"
pyarrow = "^14.0.0"
requests = "^2.31.0"
python-dotenv = "^1.0.0"
pydantic = "^2.4.0"
pydantic-settings = "^2.0.0"
kaggle = "^1.5.16"
matplotlib = "^3.8.0"
seaborn = "^0.13.0"
plotly = "^5.17.0"
jupyter = "^1.0.0"
notebook = "^7.0.0"
sqlalchemy = "^2.0.0"
fastapi = "^0.104.0"
uvicorn = "^0.24.0"
streamlit = "^1.28.0"
google-generativeai = "^0.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.10.0"
flake8 = "^6.1.0"
mypy = "^1.6.0"
isort = "^5.12.0"
pre-commit = "^3.5.0"
pyinstaller = "^6.1.0"

[tool.poetry.scripts]
pipeline = "src.main:main"

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=src --cov-report=html --cov-report=term"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

